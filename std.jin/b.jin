B0' := () ;; false
B0 :B0 = ()
B1' := () ;; true
B1 :B1 = ()

B := B0 \ B1

;ns B
	and = {self, arg2 :{Self} -> Self |
		self # {
			B0 | B0
			B1 | arg2()
		}
	}
	
	or = {self, arg2 :{Self} -> Self |
		self # {
			B0 | arg2()
			B1 | B1
		}
	}
	
	neg = {self -> Self |
		self # {
			B0 | B1
			B1 | B0
		}
	}
	
	then[T] = {self, then !{T}, else !{T} -> T |
		self # {
			B0 | else()
			B1 | then()
		}
	}
