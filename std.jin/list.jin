;include glib/garray.h glib2

;; https://docs.gtk.org/glib/struct.PtrArray.html
	the initial PtrArray will be on stack, if it's small
	when we try to mutate it, and its size exceeds the initial size, it will be reallocated on heap

;ns List[X]
	get = {self&, index :Num'u -> X? |
		;; checks if index is less than the length
	}
	
	append = {self!, element :X |
	}
	
	extend = {self!, extention :Self |
	}
	
	put = {self!, element :X, index :Num'u |
	}
	
	insert = {self!, element :X, index :Num'u |
	}
	
	trim = {self!, index :Num'u |
	}
	
	remove = {self!, index :Num'u |
	}
	
	iter = {self& | :Iter[X]
	}
