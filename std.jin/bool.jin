Bool'true' := ()
Bool'true = Bool'true. ()
Bool'false' := ()
Bool'false = Bool'false. ()

Bool := Bool'true \ Bool'false

Bool = .
	and: { self, other :{Bool} | :Bool
		self # {
			Bool'false | Bool'false
			Bool'true | rhs()
		}
	}
	
	or: { self, other :{Bool} | :Bool
		self # {
			Bool'true | Bool'true
			Bool'false | rhs()
		}
	}
	
	neg: { self | :Bool
		self # {
			Bool'true | Bool'false
			Bool'false | Bool'true
		}
	}
	
	then: { self, then !{T'}, else !{T'} | :T'
		self # {
			Bool'true | then()
			Bool'false | else()
		}
	}
